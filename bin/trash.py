# from sentence_transformers import SentenceTransformer, util
# import numpy as np

# embedder = SentenceTransformer("jhgan/ko-sroberta-multitask")


# a = '''
# 도로교통법(이하 ‘법’이라 한다) 제44조 제1항은 술에 취한 상태에서 자동차 등의 운전을 금지하고, 법 제148조의2 제1항 제1호는 ‘제44조 제1항을 2회 이상 위반한 사람’으로서 다시 같은 조 제1항을 위반하여 술에 취한 상태에서 자동차 등을 운전한 사람을 1년 이상 3년 이하의 징역이나 500만 원 이상 1천만 원 이하의 벌금에 처한다고 정하고 있다.
# 법 제148조의2 제1항 제1호는 행위주체를 단순히 2회 이상 음주운전 금지규정을 위반한 사람으로 정하고 있고, 이러한 음주운전 금지규정 위반으로 형을 선고받거나 유죄의 확정판결을 받은 경우 등으로 한정하고 있지 않다. 이것은 음주운전 금지규정을 반복적으로 위반하는 사람의 반규범적 속성, 즉 교통법규에 대한 준법정신이나 안전의식의 현저한 부족 등을 양형에 반영하여 반복된 음주운전에 대한 처벌을 강화하고, 음주운전으로 발생할 국민의 생명·신체에 대한 위험을 예방하며 교통질서를 확립하기 위한 것으로 볼 수 있다.
# 위와 같은 법 제148조의2 제1항 제1호의 문언 내용과 입법 취지 등을 종합하면, 위 조항 중 ‘제44조 제1항을 2회 이상 위반한 사람’은 문언 그대로 2회 이상 음주운전 금지규정을 위반하여 음주운전을 하였던 사실이 인정되는 사람으로 해석해야 하고, 그에 대한 형의 선고나 유죄의 확정판결 등이 있어야만 하는 것은 아니다.
# 법 제148조의2 제1항 제1호를 적용할 때 위와 같은 음주운전 금지규정 위반자의 위반전력 유무와 그 횟수는 법원이 관련 증거를 토대로 자유심증에 따라 심리·판단해야 한다. 다만 이는 공소가 제기된 범죄의 구성요건을 이루는 사실이므로, 그 증명책임은 검사에게 있다.
# '''

# b = '''
# [1] 구 여객자동차운수사업법(2007. 7. 13. 법률 제8511호로 개정되기 전의 것) 제76조 제1항 제15호, 같은 법 시행령 제29조에는 관할관청은 개인택시운송사업자의 운전면허가 취소된 때에 그의 개인택시운송사업면허를 취소할 수 있도록 규정되어 있을 뿐 그에게 운전면허 취소사유가 있다는 사유만으로 개인택시운송사업면허를 취소할 수 있도록 하는 규정은 없으므로, 관할관청으로서는 비록 개인택시운송사업자에게 운전면허 취소사유가 있다 하더라도 그로 인하여 운전면허 취소처분이 이루어지지 않은 이상 개인택시운송사업면허를 취소할 수는 없다.
# [2] 개인택시운송사업자가 음주운전을 하다가 사망한 경우 그 망인에 대하여 음주운전을 이유로 운전면허 취소처분을 하는 것은 불가능하고, 음주운전은 운전면허의 취소사유에 불과할 뿐 개인택시운송사업면허의 취소사유가 될 수는 없으므로, 음주운전을 이유로 한 개인택시운송사업면허의 취소처분은 위법하다고 한 사례.
# [3] 개인택시운송사업자가 음주운전을 하다가 사망한 후 상속인이 그 지위를 승계하기 위하여 상속 신고를 한 경우에, 망인의 음주운전은 운전면허의 취소사유에 불과할 뿐 개인택시운송사업면허의 취소사유가 될 수 없고, 개인택시운송사업의 양도·양수 인가의 제한에 관한 규정이 개인택시운송사업의 상속 신고에도 적용된다고 볼 근거도 없으므로, 관할관청이 망인의 음주운전을 이유로 상속 신고의 수리를 거부하는 것은 위법하다고 한 사례.
# '''

# c = '''
# 판단 피고인은 2014년 음주운전으로 벌금형의 처벌을 받은 전력이 있고, 특히 2018. 9. 27. 음주운전을 하다가 교통사고를 내어 적발되었음에도 불과 이틀 만에 또다시 이사건 2018. 9. 29.자 음주운전 범행을 저질러 비난가능성이 높은 점, 피고인이 2018. 9. 29. 음주운전을 하다가 교통사고를 일으켜 피해자들이 상해를 입은 점 등은 피고인에게 불리한 양형 요소들이다....음주운전의 점), 도로교통법 제148조의2 제1항 제1호, 제44조 제1항(2018. 9. 29. 음주운전의 점) 1. 상상적 경합 형법 제40조, 제50조[각 교통사고처리특례법위반(치상)죄 상호간, 범정이 더 무거운 피해자 D에 대한 교통사고처리특례법위반
# '''

# d = '''
# 그러나 한편, 이 사건 범행은 피고인이 음주운전으로 처벌받은 전력이 있음에도 또다시 술에 취한 상태에서 의무보험에 가입되어 있지 아니한 자동차를 운전하고, 자동차운전면허 없이 자동차를 운전한 것으로서, 그 죄질 및 범정이 좋지 않다. 음주운전은 자신과 타인의 생명·신체를 위협하는 범죄로 그 사회적 위험성과 해악을 고려할 때 엄단할 필요가 있는 점, 피고인은 동종 음주운전으로 처벌받은 전력이 4회나 있고, 이사건 음주운전 당시 혈중알콜농도가 높으며, 2016. 8. 2....법률 제16037호로 개정되기 전의 것) 제148조의2제1항 제1호, 제44조 제1항(음주운전의 점), 자동차손해배상보장법 제46조 제2항 제2호,
# '''

# e = '''
# 상상적 경합 형법 제40조, 제50조[2014. 3. 7.자 도로교통법위반(음주운전)죄와 도로교통법위반(무면허운전)죄 상호간, 2014. 4. 23.자 도로교통법위반(음주운전)죄와 도로교통법위반(무면허운전)죄 상호간, 2014. 9. 28.자 도로교통법위반(음주운전)죄와 도로교통법 위반(무면허운전)죄 상호간, 각 형이 더 무거운 도로교통법위반(음주운전)죄에 정한 형으로 처벌] 1. 형의 선택 각 징역형 선택 1....경합범 가중 형법 제37조 전단, 제38조 제1항 제2호, 제50조[죄질 및 범정이 가장 나쁜 2014. 9. 28.자 도로교통법위반(음주운전)죄에 정한 형에 경합범 가중] 양형의 이유 피고인이 자신의 잘못을 인정하고 반성하는 점은 
# '''
# # Corpus with example sentences
# # corpus = ['한 남자가 음식을 먹는다.',
# #  '한 남자가 빵 한 조각을 먹는다.',
# #  '그 여자가 아이를 돌본다.',
# #  '한 남자가 말을 탄다.',
# #  '한 여자가 바이올린을 연주한다.',
# #  '두 남자가 수레를 숲 속으로 밀었다.',
# #  '한 남자가 담으로 싸인 땅에서 백마를 타고 있다.',
# #  '원숭이 한 마리가 드럼을 연주한다.',
# #  '치타 한 마리가 먹이 뒤에서 달리고 있다.']

# corpus = [a, b, c, d, e]

# print('--------------------------------')
# for e in corpus:
#    print(e)
#    print(embedder.encode(e, convert_to_tensor=True))
# print('--------------------------------')
   

# corpus_embeddings = embedder.encode(corpus, convert_to_tensor=True)

# # Query sentences:
# # queries = ['한 남자가 파스타를 먹는다.',
# #   '고릴라 의상을 입은 누군가가 드럼을 연주하고 있다.',
# #   '치타가 들판을 가로 질러 먹이를 쫓는다.']


# q = '''
# 법률 제16037호로 개정되기 전의 것) 제148조의2 제1항 제1호, 제44조 제1항(음주운전의 점), 도로교통법 제154조 제2호, 제43조(무면허운전의 점), 자동차손해배상 보장법 제46조 제2항 제2호, 제8조 본문(의무보험 미가입 자동차 운행의 점) 1. 상상적 경합 형법 제40조, 제50조[도로교통법위반(음주운전)죄와 도로교통법위반(무면허운전)죄 상호 간, 형이 더 무거운 도로교통법위반(음주운전)죄에 정한 형으로 처벌] 1. 형의 선택 각 징역형 선택 1....이 사건 도로교통법위반(음주운전)죄와 도로교통법위반(무면허운전)죄는 형법 제40조의 상상적 경합범 관계에 있어 형이 더 무거운 도로교통법위반(음주운전)죄에
# '''


# queries = [q]

# # Find the closest 5 sentences of the corpus for each query sentence based on cosine similarity
# top_k = 5
# for query in queries:
#  query_embedding = embedder.encode(query, convert_to_tensor=True)
#  cos_scores = util.pytorch_cos_sim(query_embedding, corpus_embeddings)[0]
#  cos_scores = cos_scores.cpu()

#  #We use np.argpartition, to only partially sort the top_k results
# top_results = np.argpartition(-cos_scores, range(top_k))[0:top_k]

# print("\n\n======================\n\n")
# print("Query:", query)
# print("\nTop 5 most similar sentences in corpus:")

# for idx in top_results[0:top_k]:
#     print(corpus[idx].strip(), "(Score: %.4f)" % (cos_scores[idx]), "\n")



